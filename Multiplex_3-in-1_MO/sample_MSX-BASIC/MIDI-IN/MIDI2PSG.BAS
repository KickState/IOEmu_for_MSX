100 '
110 ' TITLE : MIDI to PSG for IOEmu
120 ' FILE  : midi2psg.bas
130 ' !! This program requires an MSX Basic-kun Compiler. !!
140 '
150 SCREEN0:WIDTH40:KEY1,"Quit"
160 CALL TURBO ON
170 '
180 'Init
190 DEFINT A-Z:DIM RB(3),TL(96),TH(96),VL(128),VS(3),PS(3)
200 G=5 'Gamma for MIDI-Volume
210 AS=0:BS=0:CS=0 'PSG ch-enable: 0:ON,1:OFF
220 PCH=0
230 TA=0:TB=0:TC=0:TI=0:TK=0
240 CL=5
250 '
260 'Message
270 LOCATE 0,0:PRINT "MIDI to PSG for IOEmu"
280 LOCATE 0,1:PRINT "F1 KEY: Return to BASIC"
290 LOCATE 0,CL:PRINT "> Please wait...";SPACE$(24)
300 '
310 'Enable interrupt
320 ON KEY GOSUB 1620
330 KEY(1) ON
340 ON INTERVAL=1 GOSUB 1690
350 INTERVAL ON
360 '
370 'Init PSG
380 GOSUB 790
390 '
400 'Init MIDI
410 GOSUB 1380
420 '
430 LOCATE 0,CL:PRINT "> Let's play with a MIDI keyboard !";SPACE$(26)
440 '
450 'Rcv NOTE-ON/OFF from MIDI-IN
460 I=0
470 IF (INP(&H11) AND &H1)<>0 THEN RB(I)=INP(&H10) ELSE 460
480 IF (RB(I)=&H80 OR RB(I)=&H90) THEN I=I+1 ELSE 460
490 IF (INP(&H11) AND &H1)<>0 THEN RB(I)=INP(&H10):I=I+1
500 IF I<3 THEN 490
510 '
520 'Play PSG Sounds
530 IF RB(0)=&H90 THEN GOTO 580 'Note on
540 IF RB(0)=&H80 THEN GOTO 740 'Note off
550 GOTO 460 'Rcv NOTE ON/OFF
560 '
570 'Note on
580 IF AS=0 THEN PCH=0:AS=RB(1):TA=0:GOTO 660 'PSG-A ON
590 IF BS=0 THEN PCH=1:BS=RB(1):TB=0:GOTO 660 'PSG-B ON
600 IF CS=0 THEN PCH=2:CS=RB(1):TC=0:GOTO 660 'PSG-C ON
610 PCH=PS(2)
620 IF PCH=0 THEN AS=RB(1):TA=0:GOTO 660 'Update PSG-A
630 IF PCH=1 THEN BS=RB(1):TB=0:GOTO 660 'Update PSG-B
640 IF PCH=2 THEN CS=RB(1):TC=0:GOTO 660 'Update PSG-C
650 GOTO 460 'Recieve NOTE ON/OFF
660 PS(2)=PS(1):PS(1)=PS(0):PS(0)=PCH
670 J=PCH*2:FL=TL(RB(1)-24):FH=TH(RB(1)-24)
680 SOUND J,FL
690 SOUND (J+1),FH
700 VS(PCH)=VL(RB(2)):SOUND (8+PCH),(VS(PCH))
710 GOTO 460 'Rcv NOTE ON/OFF
720 '
730 'Note off
740 IF AS=RB(1) THEN PCH=0:AS=0:GOTO 460 'PSG-A OFF
750 IF BS=RB(1) THEN PCH=1:BS=0:GOTO 460 'PSG-B OFF
760 IF CS=RB(1) THEN PCH=2:CS=0:GOTO 460 'PSG-C OFF
770 'SOUND (8+PCH),0
780 GOTO 460 'Rcv NOTE ON/OFF
790 '
800 'Set tone buffer
810 RESTORE 1130
820 FOR I=0 TO 95 STEP 12
830  FOR J=0 TO 11 STEP 1
840   READ A$
850   TL(I+J)=VAL("&H"+A$)
860  NEXT J
870  FOR K=0 TO 11 STEP 1
880   READ A$
890   TH(I+K)=VAL("&H"+A$)
900  NEXT K
910 NEXT I
920 '
930 'Initialize PSG Reg.
940 SOUND 0,TL(36) 'Ch-A tone freq [7:0]
950 SOUND 1,TH(36) 'Ch-A tone freq [11:8]
960 SOUND 2,TL(48) 'Ch-B tone freq [7:0]
970 SOUND 3,TH(48) 'Ch-B tone freq [11:8]
980 SOUND 4,TL(60) 'Ch-C tone freq [7:0]
990 SOUND 5,TH(60) 'Ch-C tone freq [11:8]
1000 SOUND 8,&H0 'Ch-A Volume [4]:Envelope,[3:0]:Volume
1010 SOUND 9,&H0 'Ch-B Volume [4]:Envelope,[3:0]:Volume
1020 SOUND 10,&H0 'Ch-C Volume [4]:Envelope,[3:0]:Volume
1030 SOUND 11,&H0 'Envelope cyc [7:0]
1040 SOUND 12,&H0 'Envelope cyc [15:8]
1050 SOUND 13,&H0 'Envelope ptrn [3:0]
1060 SOUND 6,&H0 'Noise freq [4:0]
1070 SOUND 7,&HB8 'Enable [7:6]:"10b",[5:3]:#NOISE,[2:0]:#TONE
1080 RETURN
1090 '
1100 'Tone Frequency
1110 '    C ,C#,D ,D#,E ,F ,F#,G ,G#,A ,A#,B
1120 'O1
1130 DATA 5D,9C,E7,3C,9B,02,73,EB,6B,F2,80,14
1140 DATA 0D,0C,0B,0B,0A,0A,09,08,08,07,07,07
1150 'O2
1160 DATA AF,4E,F4,9E,4E,01,BA,76,36,F9,C0,8A
1170 DATA 06,06,05,05,05,05,04,04,04,03,03,03
1180 'O3
1190 DATA 57,27,FA,CF,A7,81,5D,3B,1B,FD,E0,C5
1200 DATA 03,03,02,02,02,02,02,02,02,01,01,01
1210 'O4
1220 DATA AC,94,7D,68,53,40,2E,1D,0D,FE,F0,E3
1230 DATA 01,01,01,01,01,01,01,01,01,00,00,00
1240 'O5
1250 DATA D6,CA,BE,B4,AA,A0,97,8F,87,7F,78,71
1260 DATA 00,00,00,00,00,00,00,00,00,00,00,00
1270 'O6
1280 DATA 6B,65,5F,5A,55,50,4C,47,43,40,3C,39
1290 DATA 00,00,00,00,00,00,00,00,00,00,00,00
1300 'O7
1310 DATA 35,32,30,2D,2A,28,26,24,22,20,1E,1C
1320 DATA 00,00,00,00,00,00,00,00,00,00,00,00
1330 'O8
1340 DATA 1B,19,18,16,15,14,13,12,11,10,0F,0E
1350 DATA 00,00,00,00,00,00,00,00,00,00,00,00
1360 '
1370 'Gamma MIDI-Volume & 7/4bits
1380 FOR I=1 TO 127
1390  VL(I)=(127*(I/127)^(1/G))/8
1400 NEXT I
1410 VL(0)=0
1420 '
1430 'Init SIO (IOEmu)
1440 RESTORE 1510
1450 FOR I=1 TO 9
1460  READ A$:OUT &H11,VAL("&H"+A$)
1470 NEXT I
1480 OUT &H1F,0
1490 RETURN
1500 'Channel reset
1510 DATA 18
1520 'Set WR4,Non parity,1stop bit,x16
1530 DATA 14,44
1540 'Set WR3,8bit,receive enable
1550 DATA 03,E1
1560 'Set WR5,8bit,transmit enable
1570 DATA 05,EA
1580 'Set WR1,Disable Interupt
1590 DATA 11,00
1600 '
1610 'KEY1 Interruption : Return to BASIC
1620 IF INKEY$<>"" THEN 1620 'Clear key-buffer
1630 SOUND 7,&HBF
1640 LOCATE 0,CL:PRINT "> F1 key pressed";SPACE$(24)
1650 DEF USR=&H3E:A=USR(0) 'BIOS CALL &h003E:Init FUNC-KEY
1660 CLS:END
1670 '
1680 'Timer Interrupt
1690 TA=TA+1:TB=TB+1:TC=TC+1
1700 TI=(TA AND &H7):IF (TI>=7 AND VS(0)>0) THEN VS(0)=VS(0)-1
1710 TI=(TB AND &H7):IF (TI>=7 AND VS(1)>0) THEN VS(1)=VS(1)-1
1720 TI=(TC AND &H7):IF (TI>=7 AND VS(2)>0) THEN VS(2)=VS(2)-1
1730 SOUND 8,VS(0):SOUND 9,VS(1):SOUND 10,VS(2)
1740 'ch off
1750 IF VS(0)=0 THEN AS=0
1760 IF VS(1)=0 THEN BS=0
1770 IF VS(2)=0 THEN CS=0
1780 RETURN
